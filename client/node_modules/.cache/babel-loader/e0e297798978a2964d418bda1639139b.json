{"ast":null,"code":"var _jsxFileName = \"/Users/prjha/Documents/react/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io('http://localhost:5000/');\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M7DGl/NqV6luCY8IpJPKHYFo+ZU=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/prjha/Documents/react/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","parse","search","emit","off","on","users","setUsers","sendMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,YAAP;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACU,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeX,WAAW,CAACiB,KAAZ,CAAkBT,QAAQ,CAACU,MAA3B,CAArB;AACAZ,IAAAA,MAAM,GAAGL,EAAE,CAAC,wBAAD,CAAX;AAEAS,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoB;AAACV,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAkC,MAAM,CAEvC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACa,IAAP,CAAY,YAAZ;AACAb,MAAAA,MAAM,CAACc,GAAP;AACH,KAHD;AAIH,GAfQ,EAeP,CAACZ,QAAQ,CAACU,MAAV,CAfO,CAAT;AAiBAnB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAsBR,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGAP,IAAAA,MAAM,CAACe,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACjCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFH;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEI,QAApB;AAA8B,QAAA,IAAI,EAAEN;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEI,OAAhB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAiD,QAAA,WAAW,EAAEU;AAA9D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAMF,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YANE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;GAAMf,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\n\nimport './Chat.css'\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search)\n        socket = io('http://localhost:5000/')\n        \n        setName(name);\n        setRoom(room);\n        \n        socket.emit('join', {name, room}, () => {\n\n        })\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    },[location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n          });\n    }, [])\n\n    return (\n        <div className=\"outerContainer\">\n      <div className=\"container\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      <TextContainer users={users}/>\n    </div>\n    )\n};\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}